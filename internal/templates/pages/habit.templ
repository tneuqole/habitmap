package pages

import (
	"fmt"
	"github.com/tneuqole/habitmap/internal/ctxutil"
	"github.com/tneuqole/habitmap/internal/model"
	"github.com/tneuqole/habitmap/internal/session"
	"github.com/tneuqole/habitmap/internal/templates"
	"github.com/tneuqole/habitmap/internal/templates/components"
	"github.com/tneuqole/habitmap/internal/templates/layouts"
)

var (
	btnCSS             = "w-7 h-7 mx-2 rounded-md bg-blue-600 text-center text-white hover:bg-blue-700 transition"
	viewSelectedCSS    = "w-1/2 py-1 font-bold text-center bg-blue-600 text-white"
	viewNotSelectedCSS = "w-1/2 py-1 font-bold text-blue-600 text-center transition hover:bg-blue-700 hover:text-white"
)

templ Habit(data session.SessionData, habit model.Habit, view, date string, months []string, entriesForMonths map[string][][]model.Entry) {
	@layouts.Base(data, "Habit") {
		<div class="flex flex-col">
			<div
				class="grid grid-cols-3"
			>
				<h1 class={ templates.H1CSS + " flex items-center" }>
					<a href={ templ.URL(fmt.Sprintf("/habits/%d", habit.ID)) }>{ habit.Name }</a>
				</h1>
				<div class="flex flex-row items-center justify-center">
					<button
						class={ btnCSS }
						hx-get={ fmt.Sprintf("/habits/%d?view=%s&date=%s", habit.ID, view, templates.UpdateDate(date, view, -1)) }
						hx-target="body"
						hx-push-url="true"
					>
						&lt;
					</button>
					<p class="font-bold text-xl">{ templates.FormatDate(date, view) }</p>
					<button
						class={ btnCSS }
						hx-get={ fmt.Sprintf("/habits/%d?view=%s&date=%s", habit.ID, view, templates.UpdateDate(date, view, +1)) }
						hx-target="body"
						hx-push-url="true"
					>
						&gt;
					</button>
				</div>
				<div class="flex flex-row justify-self-end">
					<div class="flex items-center font-normal m-2 rounded-md border-2 border-blue-600 overflow-hidden w-36 h-8">
						{{
							var (
								yearCSS  string
								monthCSS string
							)
							if view == "year" {
								yearCSS = viewSelectedCSS
								monthCSS = viewNotSelectedCSS
							} else {
								yearCSS = viewNotSelectedCSS
								monthCSS = viewSelectedCSS
							}
						}}
						<div
							class={ yearCSS }
							hx-get={ fmt.Sprintf("/habits/%d?view=%s&date=%s", habit.ID, "year", date) }
							hx-target="body"
							hx-push-url="true"
						>
							Year
						</div>
						<div
							class={ monthCSS }
							hx-get={ fmt.Sprintf("/habits/%d?view=%s&date=%s", habit.ID, "month", date) }
							hx-target="body"
							hx-push-url="true"
						>
							Month
						</div>
					</div>
					<div>
						<script src="/public/js/edit_habit_menu.js" type="module"></script>
						<script nonce={ ctxutil.GetNonce(ctx) } type="module">
							import { editHabitMenu } from "/public/js/edit_habit_menu.js";
							editHabitMenu();
						</script>
						<button
							id="edit-habit-btn"
							type="button"
							class="w-8 h-8 self-start bg-blue-600 text-center text-white font-medium my-2 py-1 rounded-md hover:bg-blue-700 transition"
						>
							<svg
								xmlns="http://www.w3.org/2000/svg"
								class="block m-auto h-6 w-6"
								viewBox="0 0 24 24"
								fill="currentColor"
							>
								<circle cx="6" cy="12" r="2"></circle>
								<circle cx="12" cy="12" r="2"></circle>
								<circle cx="18" cy="12" r="2"></circle>
							</svg>
						</button>
						<div
							id="edit-habit-dropdown"
							class="origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none"
							hidden
						>
							<div class="py-1">
								<a
									href={ templ.URL(fmt.Sprintf("/habits/%d/edit", habit.ID)) }
									class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
								>
									Edit
								</a>
								<div
									hx-delete={ string(templ.URL(fmt.Sprintf("/habits/%d", habit.ID))) }
									hx-confirm="Are you sure you want to delete this habit?"
									class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900"
									role="menuitem"
								>
									Delete
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
			@components.Habit(habit, months, entriesForMonths, false)
		</div>
	}
}
