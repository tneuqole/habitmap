package template

import (
	"github.com/tneuqole/habitmap/internal/model"
	"github.com/tneuqole/habitmap/internal/util"
	"strconv"
	"time"
)

templ Month(t time.Time, habitID int, entries []model.Entry) {
	@Base() {
		<div data-habit-id={ strconv.Itoa(habitID) } class="flex flex-col border rounded-md">
			<div class="overflow-x-auto">
				<div class="inline-block min-w-full">
					<div class="overflow-hidden">
						<table class="min-w-full divide-y">
							<thead>
								<tr>
									<th>S</th>
									<th>M</th>
									<th>T</th>
									<th>W</th>
									<th>T</th>
									<th>F</th>
									<th>S</th>
								</tr>
							</thead>
							<tbody>
								for _, week := range util.GenerateMonth(t, entries) {
									<tr>
										for _, entry := range week {
											if entry.ID != -1 && entry.Date.String() != "0001-01-01" {
												<td data-entry-id={ strconv.Itoa(entry.ID) } style="background-color:green">{ strconv.Itoa(entry.Date.Time().Day()) }</td>
											} else if entry.Date.String() != "0001-01-01" {
												<td style="background-color:red">{ strconv.Itoa(entry.Date.Time().Day()) }</td>
											} else {
												<td></td>
											}
										}
									</tr>
								}
							</tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	}
}
